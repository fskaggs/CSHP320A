// <auto-generated />
using System;
using FirewallRulesTracker;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FirewallRulesTracker.Migrations
{
    [DbContext(typeof(FirewallRulesContext))]
    partial class FirewallRulesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FirewallRulesTracker.Models.FWRule", b =>
                {
                    b.Property<int>("FWRuleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Direction")
                        .HasColumnType("int");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<int>("Protocol")
                        .HasColumnType("int");

                    b.Property<int>("RequestorID")
                        .HasColumnType("int");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("SRA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("WorkItem")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FWRuleID");

                    b.HasIndex("RoleID");

                    b.ToTable("Rules");
                });

            modelBuilder.Entity("FirewallRulesTracker.Models.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ParentService")
                        .HasColumnType("int");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServiceID")
                        .HasColumnType("int");

                    b.HasKey("RoleID");

                    b.HasIndex("ServiceID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("FirewallRulesTracker.Models.Service", b =>
                {
                    b.Property<int>("ServiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ServiceID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ServiceName");

                    b.HasKey("ServiceID");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("FirewallRulesTracker.Models.FWRule", b =>
                {
                    b.HasOne("FirewallRulesTracker.Models.Role", null)
                        .WithMany("Rules")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FirewallRulesTracker.Models.Role", b =>
                {
                    b.HasOne("FirewallRulesTracker.Models.Service", null)
                        .WithMany("Roles")
                        .HasForeignKey("ServiceID");
                });

            modelBuilder.Entity("FirewallRulesTracker.Models.Role", b =>
                {
                    b.Navigation("Rules");
                });

            modelBuilder.Entity("FirewallRulesTracker.Models.Service", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
